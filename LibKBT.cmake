macro(KBT_PROJECT)
    project(${ARGV0})
    add_custom_target(init cmake -D KBT_VAR_SOURCE_DIR=${CMAKE_SOURCE_DIR}
                  -D KBT_VAR_TOOLS_DIR=${CMAKE_BINARY_DIR}/KBT-${KBT_VAR_BRANCH}
                  -D KBT_VAR_PROJECT_NAME=${PROJECT_NAME}
                  -P ${KBT_VAR_TOOLS_DIR}/lib/init.cmake)
endmacro()

macro(KBT_SET_ARCH)
    if(NOT KBT_ARCH)
        set(KBT_ARCH ${ARGV0})
    endif()
endmacro()

macro(KBT_SET_PLATFORM)
    file(GLOB KBT_VAR_FILE_EXISTS ${KBT_VAR_TOOLS_DIR}/platform/${ARGV0}.cmake)
    if(NOT KBT_VAR_FILE_EXISTS)
        message(FATAL_ERROR "Specified platform does not exist. Please check detail in project github pages.")
    endif()
    if(NOT KBT_PLATFORM)
        set(KBT_PLATFORM ${ARGV0})
        include(${KBT_VAR_TOOLS_DIR}/platform/${KBT_PLATFORM}.cmake)
    endif()
endmacro()

macro(KBT_SET_PROJECT_TYPE)
    if(NOT KBT_${PROJECT_NAME}_TYPE)
        string(TOUPPER ${PROJECT_NAME} KBT_VAR_PROJECT)
        set(KBT_${KBT_VAR_PROJECT}_TYPE ${ARGV0})
    endif()
endmacro()

macro(KBT_ADD_DEPENDENTICES dep version)
    file(GLOB kbt_file_status "${CMAKE_SOURCE_DIR}/dependenices/${dep}")
    if(NOT kbt_file_status)
        set(kbt_file_status "git clone --recursive https://github.com/${dep}.git ${CMAKE_SOURCE_DIR}/dependenices/${dep}")
        exec_program(${kbt_file_status})
        file(COPY "${CMAKE_SOURCE_DIR}/dependenices/${dep}/include/" DESTINATION "${CMAKE_BINARY_DIR}/include/${dep}")
    endif(NOT kbt_file_status)
    add_subdirectory("${CMAKE_SOURCE_DIR}/dependenices/${dep}")
    include_directories("${CMAKE_BINARY_DIR}/include")
    if(KBT_${PROJECT_NAME}_TYPE STREQUAL "lib")
        list(APPEND LIB_DEPENDENTICES ${PROJECT_NAME})
    endif(KBT_${PROJECT_NAME}_TYPE STREQUAL "lib")
endmacro()

macro(kbt_config)
    file(GLOB kbt_file_status ${PROJECT_SOURCE_DIR}/${PROJECT_NAME}.config)
    if(NOT kbt_file_status)
        # Create test file
        file(WRITE "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}.config" "#cmakedefine PROJECT_NAME ${PROJECT_NAME}\n" )
        file(APPEND "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}.config" "#cmakedefine KBT_ARCH ${KBT_ARCH}\n")
        file(APPEND "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}.config" "#cmakedefine KBT_PLATFORM ${KBT_PLATFORM}\n")
        file(APPEND "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}.config" "#cmakedefine KBT_${PROJECT_NAME}_TYPE ${KBT_${PROJECT_NAME}_TYPE}\n")
    endif(NOT kbt_file_status)
    configure_file("${PROJECT_NAME}.config" "${PROJECT_SOURCE_DIR}/include/config.h")
    file(GLOB_RECURSE ${PROJECT_NAME}_srcs_list "${PROJECT_SOURCE_DIR}/src/*.c")
    if(KBT_${PROJECT_NAME}_TYPE STREQUAL "lib")
        add_library(${PROJECT_NAME} STATIC ${${PROJECT_NAME}_srcs_list})
    endif(KBT_${PROJECT_NAME}_TYPE STREQUAL "lib")
    if(KBT_${PROJECT_NAME}_TYPE STREQUAL "bin")
        add_executable(${PROJECT_NAME} ${${PROJECT_NAME}_srcs_list})
        target_link_libraries(${PROJECT_NAME} ${LIB_DEPENDENTICES})
    endif(KBT_${PROJECT_NAME}_TYPE STREQUAL "bin")
endmacro(kbt_config)
